name: Checkout a new or existing branch
description: Useful for making sure an action re-uses an existing open PR if an open PR by some author (e.g. some bot) already exists

permissions:
  contents: write
  packages: read
  pull-requests: write

inputs:
  branch-name:
    description: Branch name to set if an existing PR was not found
    required: true
  github-token:
    description: A github private access token with permissions to write, usually GITHUB_TOKEN
    required: true
  pr-author:
    description: Author of PRs to search for (e.g. "github-actions[bot]")
    required: true
  pr-title:
    description: Title of PRs to search for (e.g. "My custom action")
    required: true

outputs:
  branch-name:
    description: Return either an existing branch name (from the first open PR that was found) or the given branch name from inputs
    value: ${{ steps.checkout-branch.outputs.branch-name }}
  pr-exists:
    description: Sets a flag if a PR by an author with the title already existed
    value: ${{ steps.checkout-branch.outputs.pr-exists }}

runs:
  using: composite
  steps:
    - name: Checkout a new or existing branch
      id: checkout-branch
      shell: bash
      run: |
        existing_branch=$(gh pr list --author "$PR_AUTHOR" --state open --json title,headRefName -q "first(.[] | select(.title == \"$PR_TITLE\") | .headRefName)"")
        if [[ -n "$existing_branch" ]]; then
          git fetch origin $existing_branch
          git checkout $existing_branch
          git reset --hard main
          echo "branch-name=$existing_branch" >> "$GITHUB_OUTPUT"
          echo "pr-exists=1" >> "$GITHUB_OUTPUT"
        else
          new_branch="$INPUTS_BRANCH_NAME"
          git checkout -b $new_branch
          echo "branch-name=$new_branch" >> "$GITHUB_OUTPUT"
        fi
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        INPUTS_BRANCH_NAME: ${{ inputs.branch-name }}
        PR_AUTHOR: ${{ inputs.pr-author }}
        PR_TITLE: ${{ inputs.pr-title }}
